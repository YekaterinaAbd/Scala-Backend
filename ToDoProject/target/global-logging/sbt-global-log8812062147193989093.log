[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\yekat\AppData\Local\Temp\idea9.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\yekat\AppData\Local\Temp\idea9.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 1.8.0_282)
[debug]       Load.loadUnit: plugins took 67.7487ms
[debug]       Load.loadUnit: defsScala took 0.2977ms
[debug] [Loading] Scanning directory C:\Users\yekat\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\yekat\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.8465 ms
[debug]           Load.resolveProject(global-plugins) took 66.3454ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\yekat\.sbt\1.0\plugins, plugins: List(<none>))) took 99.8285ms
[debug] [Loading] Done in C:\Users\yekat\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 123.349ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2684ms
[debug]     Load.loadUnit(file:/C:/Users/yekat/.sbt/1.0/plugins/, ...) took 197.9042ms
[debug]   Load.apply: load took 381.8316ms
[debug]   Load.apply: resolveProjects took 10.0425ms
[debug]   Load.apply: finalTransforms took 112.6373ms
[debug]   Load.apply: config.delegates took 8.486ms
[debug]   Load.apply: Def.make(settings)... took 1375.2335ms
[debug]   Load.apply: structureIndex took 231.8069ms
[debug]   Load.apply: mkStreams took 2.2479ms
[info] loading global plugins from C:\Users\yekat\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5119.3994ms
[debug]           Load.loadUnit: plugins took 25.4451ms
[debug]           Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory D:\ScalaProjects\untitled1\project
[debug]             Load.loadUnit: mkEval took 4.3703ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\ScalaProjects\untitled1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.3244 ms
[info] loading settings for project untitled1-build from idea9.sbt ...
[debug]               Load.resolveProject(untitled1-build) took 3.1372ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled1-build, base: D:\ScalaProjects\untitled1\project, plugins: List(<none>))) took 7.1231ms
[debug] [Loading] Done in D:\ScalaProjects\untitled1\project, returning: (untitled1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 139.8514ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.0143ms
[debug]         Load.loadUnit(file:/D:/ScalaProjects/untitled1/project/, ...) took 170.4648ms
[debug]       Load.apply: load took 173.8322ms
[debug]       Load.apply: resolveProjects took 0.1113ms
[debug]       Load.apply: finalTransforms took 29.5868ms
[debug]       Load.apply: config.delegates took 0.921ms
[debug]       Load.apply: Def.make(settings)... took 219.9731ms
[debug]       Load.apply: structureIndex took 119.7568ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from D:\ScalaProjects\untitled1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1123.184ms
[debug]     Load.loadUnit: defsScala took 0.0413ms
[debug] [Loading] Scanning directory D:\ScalaProjects\untitled1
[debug]       Load.loadUnit: mkEval took 0.3939ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\ScalaProjects\untitled1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.7712 ms
[info] loading settings for project untitled1 from build.sbt ...
[debug]         Load.resolveProject(untitled1) took 50.3969ms
[debug]       Load.loadTransitive: finalizeProject(Project(id untitled1, base: D:\ScalaProjects\untitled1, plugins: List(<none>))) took 56.5463ms
[debug] [Loading] Done in D:\ScalaProjects\untitled1, returning: (untitled1)
[debug]     Load.loadUnit: loadedProjectsRaw took 200.4337ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.4488ms
[debug]   Load.loadUnit(file:/D:/ScalaProjects/untitled1/, ...) took 1332.6334ms
[debug] Load.apply: load took 1334.5254ms
[debug] Load.apply: resolveProjects took 0.111ms
[debug] Load.apply: finalTransforms took 57.4204ms
[debug] Load.apply: config.delegates took 1.0004ms
[debug] Load.apply: Def.make(settings)... took 212.9321ms
[debug] Load.apply: structureIndex took 82.5431ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to untitled1 (in build file:/D:/ScalaProjects/untitled1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54281 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54281, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled1 (in build file:/D:/ScalaProjects/untitled1/)
[debug] > Exec(idea-shell, None, None)
