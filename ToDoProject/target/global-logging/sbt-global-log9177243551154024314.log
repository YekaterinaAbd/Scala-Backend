[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\yekat\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\yekat\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 1.8.0_282)
[debug]       Load.loadUnit: plugins took 83.0349ms
[debug]       Load.loadUnit: defsScala took 0.2911ms
[debug] [Loading] Scanning directory C:\Users\yekat\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\yekat\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 28.8581 ms
[debug]           Load.resolveProject(global-plugins) took 51.8346ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\yekat\.sbt\1.0\plugins, plugins: List(<none>))) took 117.1723ms
[debug] [Loading] Done in C:\Users\yekat\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 141.1799ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3513ms
[debug]     Load.loadUnit(file:/C:/Users/yekat/.sbt/1.0/plugins/, ...) took 232.974ms
[debug]   Load.apply: load took 454.3473ms
[debug]   Load.apply: resolveProjects took 6.304ms
[debug]   Load.apply: finalTransforms took 118.0711ms
[debug]   Load.apply: config.delegates took 7.5109ms
[debug]   Load.apply: Def.make(settings)... took 2132.6233ms
[debug]   Load.apply: structureIndex took 284.0931ms
[debug]   Load.apply: mkStreams took 2.0835ms
[info] loading global plugins from C:\Users\yekat\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5797.8662ms
[debug]           Load.loadUnit: plugins took 27.2491ms
[debug]           Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory D:\ScalaProjects\untitled1\project
[debug]             Load.loadUnit: mkEval took 3.9345ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\ScalaProjects\untitled1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.379 ms
[info] loading settings for project untitled1-build from idea1.sbt ...
[debug]               Load.resolveProject(untitled1-build) took 3.4785ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled1-build, base: D:\ScalaProjects\untitled1\project, plugins: List(<none>))) took 7.7689ms
[debug] [Loading] Done in D:\ScalaProjects\untitled1\project, returning: (untitled1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 154.275ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.3761ms
[debug]         Load.loadUnit(file:/D:/ScalaProjects/untitled1/project/, ...) took 187.9818ms
[debug]       Load.apply: load took 192.0879ms
[debug]       Load.apply: resolveProjects took 0.1565ms
[debug]       Load.apply: finalTransforms took 34.2449ms
[debug]       Load.apply: config.delegates took 0.7823ms
[debug]       Load.apply: Def.make(settings)... took 175.5706ms
[debug]       Load.apply: structureIndex took 90.2539ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from D:\ScalaProjects\untitled1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1031.0139ms
[debug]     Load.loadUnit: defsScala took 0.0168ms
[debug] [Loading] Scanning directory D:\ScalaProjects\untitled1
[debug]       Load.loadUnit: mkEval took 0.386ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\ScalaProjects\untitled1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.8362 ms
[info] loading settings for project untitled1 from build.sbt ...
[debug]         Load.resolveProject(untitled1) took 39.4879ms
[debug]       Load.loadTransitive: finalizeProject(Project(id untitled1, base: D:\ScalaProjects\untitled1, plugins: List(<none>))) took 46.9457ms
[debug] [Loading] Done in D:\ScalaProjects\untitled1, returning: (untitled1)
[debug]     Load.loadUnit: loadedProjectsRaw took 238.9237ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.9194ms
[debug]   Load.loadUnit(file:/D:/ScalaProjects/untitled1/, ...) took 1279.3888ms
[debug] Load.apply: load took 1282.7095ms
[debug] Load.apply: resolveProjects took 0.2554ms
[debug] Load.apply: finalTransforms took 57.7349ms
[debug] Load.apply: config.delegates took 0.4977ms
[debug] Load.apply: Def.make(settings)... took 220.2415ms
[debug] Load.apply: structureIndex took 57.7996ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to untitled1 (in build file:/D:/ScalaProjects/untitled1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54281 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54281, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled1 (in build file:/D:/ScalaProjects/untitled1/)
[debug] > Exec(idea-shell, None, None)
