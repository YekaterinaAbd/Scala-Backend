[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\yekat\AppData\Local\Temp\idea10.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\yekat\AppData\Local\Temp\idea10.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (AdoptOpenJDK Java 1.8.0_282)
[debug]       Load.loadUnit: plugins took 69.9213ms
[debug]       Load.loadUnit: defsScala took 0.3134ms
[debug] [Loading] Scanning directory C:\Users\yekat\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\yekat\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.5331 ms
[debug]           Load.resolveProject(global-plugins) took 66.2284ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\yekat\.sbt\1.0\plugins, plugins: List(<none>))) took 107.9496ms
[debug] [Loading] Done in C:\Users\yekat\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 134.5093ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2751ms
[debug]     Load.loadUnit(file:/C:/Users/yekat/.sbt/1.0/plugins/, ...) took 212.3495ms
[debug]   Load.apply: load took 400.0981ms
[debug]   Load.apply: resolveProjects took 7.8375ms
[debug]   Load.apply: finalTransforms took 116.8162ms
[debug]   Load.apply: config.delegates took 9.3643ms
[debug]   Load.apply: Def.make(settings)... took 1480.5997ms
[debug]   Load.apply: structureIndex took 278.6387ms
[debug]   Load.apply: mkStreams took 2.0027ms
[info] loading global plugins from C:\Users\yekat\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4837.2755ms
[debug]           Load.loadUnit: plugins took 29.8083ms
[debug]           Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory D:\ScalaProjects\untitled1\project
[debug]             Load.loadUnit: mkEval took 3.5467ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\ScalaProjects\untitled1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.9734 ms
[info] loading settings for project untitled1-build from idea10.sbt ...
[debug]               Load.resolveProject(untitled1-build) took 14.5905ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled1-build, base: D:\ScalaProjects\untitled1\project, plugins: List(<none>))) took 18.2101ms
[debug] [Loading] Done in D:\ScalaProjects\untitled1\project, returning: (untitled1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 161.5219ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.0066ms
[debug]         Load.loadUnit(file:/D:/ScalaProjects/untitled1/project/, ...) took 197.3956ms
[debug]       Load.apply: load took 201.7706ms
[debug]       Load.apply: resolveProjects took 0.156ms
[debug]       Load.apply: finalTransforms took 29.7629ms
[debug]       Load.apply: config.delegates took 0.8352ms
[debug]       Load.apply: Def.make(settings)... took 149.785ms
[debug]       Load.apply: structureIndex took 103.7292ms
[debug]       Load.apply: mkStreams took 0.0022ms
[info] loading project definition from D:\ScalaProjects\untitled1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 882.8788ms
[debug]     Load.loadUnit: defsScala took 0.0059ms
[debug] [Loading] Scanning directory D:\ScalaProjects\untitled1
[debug]       Load.loadUnit: mkEval took 0.3509ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\ScalaProjects\untitled1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.1944 ms
[info] loading settings for project untitled1 from build.sbt ...
[debug]         Load.resolveProject(untitled1) took 39.9878ms
[debug]       Load.loadTransitive: finalizeProject(Project(id untitled1, base: D:\ScalaProjects\untitled1, plugins: List(<none>))) took 45.588ms
[debug] [Loading] Done in D:\ScalaProjects\untitled1, returning: (untitled1)
[debug]     Load.loadUnit: loadedProjectsRaw took 172.2768ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.3566ms
[debug]   Load.loadUnit(file:/D:/ScalaProjects/untitled1/, ...) took 1061.2953ms
[debug] Load.apply: load took 1063.3344ms
[debug] Load.apply: resolveProjects took 0.1569ms
[debug] Load.apply: finalTransforms took 38.8505ms
[debug] Load.apply: config.delegates took 0.5403ms
[debug] Load.apply: Def.make(settings)... took 186.099ms
[debug] Load.apply: structureIndex took 85.1193ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to untitled1 (in build file:/D:/ScalaProjects/untitled1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54281 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54281, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled1 (in build file:/D:/ScalaProjects/untitled1/)
[debug] > Exec(idea-shell, None, None)
